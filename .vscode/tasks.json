{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        // build-dll
        {
            "label": "build-dll",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "publish",
                "-o",
                "${workspaceFolder}/build/${input:configuration}/Redis.PowerShell/${input:version}/",
                "-c",
                "${input:configuration}",
                // Ask dotnet build to generate full paths for file names.
                "/property:GenerateFullPaths=true",
                // Do not generate summary otherwise it leads to duplicate errors in Problems panel
                "/consoleloggerparameters:NoSummary"
            ],
            "group": "build",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$msCompile",
        },
        // build-docs
        {
            "label": "build-docs",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-File",
                "${workspaceFolder}/build/build-docs.ps1",
                "-SolutionDirectory",
                "${workspaceFolder}",
                "-FullOutputPath",
                "${workspaceFolder}/build/${input:configuration}/Redis.PowerShell/${input:version}"
            ],
        },
        // build-pwsh
        {
            "label": "build-pwsh",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-File",
                "${workspaceFolder}/build/build-pwsh.ps1",
                "-SolutionDirectory",
                "${workspaceFolder}",
                "-FullOutputPath",
                "${workspaceFolder}/build/${input:configuration}/Redis.PowerShell/${input:version}"
            ]
        },
        // build-manifest
        {
            "label": "build-manifest",
            "command": "pwsh",
            "args": [
                "-File",
                "${workspaceFolder}/build/build-manifest.ps1",
                "-SolutionDirectory",
                "${workspaceFolder}",
                "-FullOutputPath",
                "${workspaceFolder}/build/${input:configuration}/Redis.PowerShell/${input:version}",
                "-Version",
                "${input:version}"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "build-dll",
                "build-docs",
                "build-pwsh",
            ],
            "dependsOrder": "parallel"
        },
        // clean
        {
            "label": "clean",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Remove-Item",
                "-Path",
                "${workspaceFolder}/build/${input:configuration}/Redis.PowerShell/${input:version}/",
                // "-Force",
                "-Recurse"
            ],
        },
        // rebuild
        {
            "label": "rebuild",
            "dependsOn": [
                "clean",
                "build-manifest"
            ],
        },
        // build.ps1
        {
            "label": "build.ps1",
            "command": "pwsh",
            "args": [
                "-file",
                "${workspaceFolder}/build.ps1",
                "-configuration",
                "${input:configuration}",
                "-version",
                "${input:version}"
            ],
            "group": "build",
        },
        // docker build
        {
            "label": "Docker Build",
            "type": "shell",
            "command": "docker",
            "args": [
                "build",
                "-t",
                "redis.powershell:${input:version}",
                "-t",
                "redis.powershell:latest",
                "-t",
                "redis.powershell",
                ".",
                "--build-arg",
                "configuration=${input:configuration}",
                "--build-arg",
                "version=${input:version}"
            ],
            "group": "build",
        },
    ],
    "inputs": [
        {
            "id": "configuration",
            "description": "The build configuration to use. 'Release' or 'Debug'",
            "default": "Debug",
            "options": [
                "Debug",
                "Release"
            ],
            "type": "pickString"
        },
        {
            "id": "version",
            "description": "A version string that controls the module version to build as",
            "default": "1.0.0",
            "type": "promptString",
        },
    ]
}